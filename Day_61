class Node:
    def __init__(self,data):
        self.data = data
        self.prev = None
        self.next = None
        
        
class Dll:
    def __init__(self):
        self.head = None
        
    def insert(self,val):
        new = Node(val)
        if self.head == None:
            self.head = new
            return
        temp = self.head
        while temp.next is not None:
            temp = temp.next
        temp.next = new
        new.prev = temp
        
        
    def display(self):
        temp = self.head
        while temp is not None:
            print(temp.data,end='->')
            temp = temp.next
        print(None)
        
    def delete(self,val):
        count = 1
        temp = self.head
        while temp is not None:
            if val == count:
                if temp.prev:
                    temp.prev.next = temp.next 
                if temp.next:
                    temp.next.prev = temp.prev
                if temp == self.head:
                    self.head = temp.next
                temp = None
                break
            temp = temp.next
            count+=1
        self.display()

def main():
    inp = list(map(int,input("Enter the elments of the linked list:").split()))
    dl = Dll()
    for i in inp:
        dl.insert(i)
    dl.display()
    dl.delete(2)

if __name__ == '__main__':
    main()
