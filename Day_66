class Node:
    def __init__(self,data):
        self.data = data
        self.next = None

class Linkedlist:
    def __init__(self):
        self.head = None
    
    def insert(self,data):
        new = Node(data)
        if self.head is None:
            self.head = new
            return
        temp = self.head
        while temp.next is not None:
            temp = temp.next
        temp.next = new
    
    def display(self):
        temp = self.head
        while temp is not None:
            print(temp.data,end = '->')
            temp = temp.next
        print(None)
        
def pair_sum(l1,l2,x):
    temp1 = l1.head
    count = 0
    while temp1 is not None:
        temp2 = l2.head
        while temp2 is not None:
            if temp1.data + temp2.data == x:
                count += 1
            temp2 = temp2.next
        temp1 = temp1.next
    return count

def main():
    inp1 = list(map(int,input("Enter the first list elements:").split()))
    inp2 = list(map(int,input("Enter the second list elements:").split()))
    x = int(input("Enter the value of x:"))
    ll1 = Linkedlist()
    ll2 = Linkedlist()
    for i in inp1:
        ll1.insert(i)
    for j in inp2:
        ll2.insert(j)
    print(pair_sum(ll1,ll2,x))

if __name__ == '__main__':
    main()
