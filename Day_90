def check(ll,num):
    temp = ll.head
    res = ll.head
    jk = 1
    while jk != num:
        temp = temp.next
        jk += 1
    if temp is not None:
        if temp.data == res.data:
            return True
        else:
            return False
    else:
        return False
        
class node:
    def __init__(self,data):
        self.data = data
        self.next = None

class double_linkedlist:
    def __init__(self):
        self.head = None
        
    def insert(self,val):
        new = node(val)
        if self.head is None:
            self.head = new
            new.next = self.head
            return
        temp = self.head
        while temp.next is not self.head:
            temp = temp.next
        temp.next = new
        new.next = self.head
        
    def display(self):
        temp = self.head
        while temp.next is not self.head:
            print(temp.data,end='->')
            temp = temp.next
        print(temp.data)
    
    def count(self):
        add = 1
        temp = self.head
        while temp is not self.head:
            temp = temp.next
            add += 1
        return add
        
    
class linkedlist:
    def __init__(self):
        self.head = None
    
    def insert(self,val):
        new = node(val)
        if self.head is None:
            self.head = new
            return
        temp = self.head
        while temp.next is not None:
            temp = temp.next
        temp.next = new
    
    def count(self):
        add = 1
        temp = self.head
        while temp is not None:
            temp = temp.next
            add += 1
        return add
    
def main():
    emp = list(map(int,input("Enter the linkedlist elements:").split()))
    D_obj = double_linkedlist()
    S_obj = linkedlist()
    for i in emp:
        D_obj.insert(i)
        S_obj.insert(i)
        
    #obj.display()
    print(check(D_obj,D_obj.count()))
    print(check(S_obj,S_obj.count()))

if __name__ == '__main__':
    main()
        
