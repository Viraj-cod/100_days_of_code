class Node:
    def __init__(self,data):
        self.data = data
        self.next = None
    
class Linkedlist:
    def __init__(self):
        self.head = None
    
    def insert(self,val):
        new = Node(val)
        if self.head is None:
            self.head = new
            return
        temp = self.head
        while temp.next is not None:
            temp = temp.next
        temp.next = new
        
    def display(self):
        temp = self.head
        while temp is not None:
            print(temp.data,end='->')
            temp = temp.next
        print(None)
        
    def cal(self):
        temp = self.head
        while temp is not None:
            count = 0
            data = temp.data
            slow = self.head
            fast = self.head.next
            while slow.next is not None:
                if slow.data == data and count == 0:
                    count += 1
                if fast.data == data and count == 1:
                    slow.next = fast.next
                if slow.next:    
                    slow = slow.next
                if fast.next:
                    fast = fast.next
            temp = temp.next
        self.display()

def main():
    inp = list(map(int,input("Enter the elements of the linked list:").split()))
    ll = Linkedlist()
    for i in inp:
        ll.insert(i)
    ll.display()
    ll.cal()

if __name__ == '__main__':
    main()
                    
    
        
        
        
