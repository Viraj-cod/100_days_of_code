class Node:
    def __init__(self,data):
        self.data = data
        self.next = None
    
class Linkedlist:
    def __init__(self):
        self.head = None
    
    def insert(self,val):
        new = Node(val)
        if self.head is None:
            self.head = new
            return
        temp = self.head
        while temp.next is not None:
            temp = temp.next
        temp.next = new
    
    def display(self):
        temp = self.head
        while temp is not None:
            print(temp.data,end = '->')
            temp = temp.next
        print(None)
        
    def count(self):
        num = 0
        temp = self.head
        while temp is not None:
            num += 1
            temp = temp.next
        return num
        
    def mid(self):
        num = self.count()
        
        if num % 2 != 0:
            mid = int(num / 2)
            temp = self.head
            number = 1
            while temp.next is not None:
                if mid == number:
                    return temp.next.data
                number += 1
                temp = temp.next
            
        elif num % 2 == 0:
            mid = num / 2
            temp = self.head
            number = 1
            while temp.next is not None:
                if mid == number:
                    return temp.next.data
                number += 1
                temp = temp.next
            
        
def main():
    ele = list(map(int,input("Enter the Linkedlist elements:").split()))
    ll = Linkedlist()
    for i in ele:
        ll.insert(i)
    #ll.display()
    print(ll.mid())

if __name__ == '__main__':
    main()
