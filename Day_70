class Node:
    def __init__(self,data):
        self.data = data
        self.next = None
    
class Linkedlist:
    def __init__(self):
        self.head = None
    
    def insert(self,val):
        new_node = Node(val)
        if self.head is None:
            self.head = new_node
            return
        temp = self.head
        while temp.next is not None:
            temp = temp.next
        temp.next = new_node
    
    def display(self):
        temp = self.head
        while temp is not None:
            print(temp.data,end = '->')
            temp = temp.next
        print(None)

def merge(linkd,add):
    temp = linkd.head
    while temp.next is not None:
        temp = temp.next
    temp.next = add.head
    return linkd
    
def list_ll(ite):
    new = ite[0]
    for i in range(1,len(ite)):
        new = merge(new,ite[i])
    return new.display()
        
def main():
    temp = []
    print('Add Linkedlist elements:')
    print('Enter -1 to exit')
    while True:
        lists = list(map(int,input().split()))
        if lists == [-1]:
            break
        ll = Linkedlist()
        for i in lists:
            ll.insert(i)
        temp.append(ll)
    list_ll(temp)
    
if __name__ == '__main__':
    main()
            
    
