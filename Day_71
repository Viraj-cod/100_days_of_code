class Node:
    def __init__(self,data):
        self.data = data
        self.next = None

class LinkedList:
    def __init__(self):
        self.head = None
    
    def insert(self,val):
        new = Node(val)
        if self.head is  None:
            self.head = new
            return
        temp = self.head
        while temp.next is not None:
            temp = temp.next
        temp.next = new
    
    def display(self):
        temp = self.head
        while temp is not None:
            print(temp.data,end ='->')
            temp = temp.next
        print(None)
    
    def count(self):
        num = 0
        temp = self.head
        while temp is not None:
            num += 1
            temp = temp.next
        return num
    
    def swap(self):
        check = self.count()
        if check % 2 == 0:
            slow = self.head
            fast = self.head.next
            while fast.next is not None:
                temp = slow.data
                slow.data = fast.data
                fast.data = temp
                slow = slow.next.next
                fast = fast.next.next
            
            temp = slow.data
            slow.data = fast.data
            fast.data = temp
            
        else:
            slow = self.head
            fast = self.head.next
            while fast.next is not None:
                temp = slow.data
                slow.data = fast.data
                fast.data = temp
                if fast.next.next:
                    slow = slow.next.next
                    fast = fast.next.next
                else:
                    break
        self.display()

def main():
    inp = list(map(int,input("Enter the elements:").split()))
    ll = LinkedList()
    for i in inp:
        ll.insert(i)
    ll.display()
    ll.swap()

if __name__ == '__main__':
    main()
            
            
